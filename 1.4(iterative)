g=[]
n=int(input("Enter number of nodes"))
for i in range(n):
    l=[int(x) for x in input().split()]
    g.append(l)
    
import math

goal=int(input("Enter goal"))

def depth_limited_search(g,depth,goal):
    v=[]
    l=recursive_dls(0,g,depth,goal,v)
    print(v)
    return l
def recursive_dls(ind,g,depth,goal,v):
    v.append(ind)
    if ind==goal:
        print("Goal found")
        return ind
    elif depth==0:
        return -1
    else:
        for i in range(len(g[ind])):
            if g[ind][i]==1 and i not in v:
                l=recursive_dls(i,g,depth-1,goal,v)
                if l!=-1:
                    return l
        return l
        
def iterative_deepening(g,goal):
    for i in range(0,3):
        print("limit",i)
        l=depth_limited_search(g,i,goal)
        if l!=-1:
            return l
l=iterative_deepening(g,goal)
l



Output:

Enter number of nodes7
0 1 1 0 0 0 0
1 0 0 1 1 0 0
1 0 0 0 0 1 1
0 1 0 0 0 0 0
0 1 0 0 0 0 0
0 0 1 0 0 0 0
0 0 1 0 0 0 0
Enter goal5
limit 0
[0]
limit 1
[0, 1, 2]
limit 2
Goal found
[0, 1, 3, 4, 2, 5]
5
